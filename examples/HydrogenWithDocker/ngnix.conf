upstream app{
 server 127.0.0.1:8080;
 server 127.0.0.1:8081;

}


server {
        server_name <website_url>  ;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
               root  /var/www/client;
                 try_files $uri  @docker;
               expires max;
                add_header Cache-Control "public";
        }

        location @docker {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass http://app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        }



    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/<website_url>/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/<website_url>/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



server {
    if ($host = <website_url>) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

        server_name <website_url>  ;

    listen 80;
    return 404; # managed by Certbot

}
